#!/usr/bin/env bash
# Script for managing the manage_my_process
# Requirements:
# - Script displays manage_my_process started when started
# - Script displays manage_my_process stopped when stopped
# - Script displays manage_my_process restarted when restarted
# - Script displays Usage: manage_my_process {start|stop|restart} when nothing is passed or something different than start, stop, or restart
# - Script creates /var/run/my_process.pid file when started
# - Script starts manage_my_process process when started
# - Script deletes /var/run/my_process.pid file when stopped
# - Script stops manage_my_process process when stopped


PID_FILE="/var/run/my_process.pid"
PROCESS_NAME="manage_my_process"

start_process() {
    if [ -f "$PID_FILE" ]; then
        echo "$PROCESS_NAME is already running."
    else
        ps_output=$(ps -ef | grep "$PROCESS_NAME" | grep -v grep)
        if [ -n "$ps_output" ]; then
            echo "$PROCESS_NAME is already running."
        else
            ./manage_my_process >/dev/null 2>&1 &
            echo -n "$!" > "$PID_FILE"
            echo "$PROCESS_NAME started"
        fi
    fi
}

stop_process() {
    if [ -f "$PID_FILE" ]; then
        ps_output=$(ps -ef | grep "$PROCESS_NAME" | grep -v grep)
        if [ -n "$ps_output" ]; then
            pid=$(cat "$PID_FILE")
            kill "$pid"
            rm "$PID_FILE"
            echo "$PROCESS_NAME stopped"
            echo "Good"
        else
            echo "$PROCESS_NAME is not running."
        fi
    else
        echo "$PROCESS_NAME is not running."
    fi
}

restart_process() {
    echo "$PROCESS_NAME restarted"
}

case "$1" in
    start)
        start_process
        ;;
    stop)
        stop_process
        ;;
    restart)
        restart_process
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac

exit 0

